@using SimpleStudentElections.Helpers
@using SimpleStudentElections.Logic
@model SimpleStudentElections.Controllers.AdminElectionsController.ViewVotesData

@{
    ViewBag.Title = Model.Election.Name + " | Votes";

    Html.IncludeDataTables();
}

<h2>@Model.Election.Name</h2>

<table class="table table-bordered view-votes-table">
    @foreach (var position in Model.Election.Positions.OrderBy(p => p.Id))
    {
        <tr>
            <td style="width: 25%">@position.HumanName</td>
            <td>
                @{
                    int totalVotes = position.NominationEntries.Sum(entry => entry.Votes.Count);

                    if (totalVotes > 0)
                    {
                        foreach (DisplayNomineeEntry entry in Model.NomineeEntries[position])
                        {
                            int votes = entry.ModelEntry.Votes.Count;

                            <div class="nominee-entry">
                                <div>@Html.DisplayFor(m => entry)</div>
                                <div class="progress">
                                    @if (votes == 0)
                                    {
                                        <div class="text-center w-100">No votes</div>
                                    }
                                    else
                                    {
                                        int progress = (int) Math.Round(votes / (float) totalVotes * 100, 0);

                                        <div class="progress-bar" role="progressbar" style="width: @progress%">
                                            @progress%
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <span class="text-muted">There are no votes for this position</span>
                    }
                }
            </td>
        </tr>
    }
</table>

<button class="btn btn-success" id="show-detailed-votes">View detailed votes</button>
<table id="votes-detailed-table" class="table table-striped table-bordered" style="display: none"></table>

@section scripts
{
    <script>
        const $detailsTable = $("#votes-detailed-table");
        const $showDetailsButton = $("#show-detailed-votes");

        $showDetailsButton.click(function() {
            $showDetailsButton.remove();

            $detailsTable.removeAttr("style");
            $detailsTable.DataTable({
                // Buttons
                buttons: [
                    {
                        extend: 'excel',
                        text: 'Export to Excel'
                    }
                ],

                // Layout
                dom: "<'row'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'d-flex justify-content-between under-datatable'<i><l><p>>",

                // Data
                ajax: {
                    url: "@Url.Action("VotesDetails", new {id = Model.Election.Id})",
                    type: "POST"
                },
                order: [[2, 'asc'], [1, 'asc']],
                columns: [
                    {
                        title: "Nominee ID",
                        data: "NomineeId"
                    },
                    {
                        title: "Nominee",
                        data: "NomineeName",
                        render: function(data, type, row) {
                            if (data == null) {
                                return '<span class="text-muted">User not found in timetable database</span>';
                            }

                            return data;
                        }
                    },
                    {
                        title: "Position",
                        data: "Position"
                    },
                    {
                        title: "Voted at",
                        data: "VotedAtSort",
                        render: function(data, type, row) {
                            // If display or filter data is requested, format the date
                            if (type === 'display' || type === 'filter') {
                                return row["VotedAtText"];
                            }

                            // Otherwise the data type requested (`type`) is type detection or
                            // sorting data, for which we want to use the integer, so just return
                            // that, unaltered
                            return data;
                        }
                    }
                ]
            });

            const $underDatatable = $('.under-datatable');

            $underDatatable.find('.dataTables_info').addClass('pt-2');
            $underDatatable.find('.dataTables_length').addClass('pt-2');
        });
    </script>
}
